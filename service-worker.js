!function(){"use strict";const e=1657069602605,t="cache"+e,n=["/client/client.09b05152.js","/client/inject_styles.5607aec6.js","/client/index.75847c56.js","/client/_layout.040fcf8c.js","/client/index.f9d9a913.js","/client/SEO.f25e3988.js","/client/wedding_party.c1ec6fd9.js","/client/registry.c5579540.js","/client/schedule.17fc2222.js","/client/DividedCard.77a879e4.js","/client/photos.db5df5ee.js","/client/travel.cade6d97.js","/client/rsvp.45ceca4c.js","/client/faq.3ec0fa35.js"].concat(["/service-worker-index.html","/android-chrome-192x192.png","/android-chrome-256x256.png","/apple-touch-icon.png","/browserconfig.xml","/favicon-16x16.png","/favicon-32x32.png","/favicon.ico","/global.css","/halloween.jpg","/home/hero3_3x2.jpg","/manifest.json","/mstile-150x150.png","/photos/katie+spencer1.jpg","/photos/katie+spencer2.jpg","/photos/katie+spencer3.jpg","/pink_flower_petals.png","/registry/bedbathandbeyond1.png","/registry/bedbathandbeyond2.png","/registry/bedbathandbeyond3.png","/registry/target1.png","/registry/target2.png","/registry/target3.png","/registry/wayfair1.jpg","/registry/wayfair2.jpg","/registry/wayfair3.jpg","/safari-pinned-tab.svg","/schedule/Cake.svg","/schedule/Cheers.svg","/schedule/Rings.svg","/travel/hampton_inn.jpg","/wedding_party/chase.jpg","/wedding_party/drew.jpg","/wedding_party/eden.jpg","/wedding_party/elissa.jpg","/wedding_party/emily.jpg","/wedding_party/lauren.jpg","/wedding_party/matthew.jpg","/wedding_party/molli.jpg","/wedding_party/nick.jpg","/wedding_party/sam.jpg","/wedding_party/syrus.jpg","/wedding_party/zak.jpg"]),s=new Set(n);self.addEventListener("install",(e=>{e.waitUntil(caches.open(t).then((e=>e.addAll(n))).then((()=>{self.skipWaiting()})))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((async e=>{for(const n of e)n!==t&&await caches.delete(n);self.clients.claim()})))})),self.addEventListener("fetch",(t=>{if("GET"!==t.request.method||t.request.headers.has("range"))return;const n=new URL(t.request.url);n.protocol.startsWith("http")&&(n.hostname===self.location.hostname&&n.port!==self.location.port||(n.host===self.location.host&&s.has(n.pathname)?t.respondWith(caches.match(t.request)):"only-if-cached"!==t.request.cache&&t.respondWith(caches.open("offline"+e).then((async e=>{try{const n=await fetch(t.request);return e.put(t.request,n.clone()),n}catch(n){const s=await e.match(t.request);if(s)return s;throw n}})))))}))}();
